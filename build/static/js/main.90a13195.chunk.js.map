{"version":3,"sources":["component/single-button/index.js","views/game/menu/index.js","utils.js","views/game/board/index.js","lang.js","component/status-bar/index.js","views/game/index.js","index.js"],"names":["SingleButton","text","size","icon","onClick","className","style","padding","fontSize","Menu","self","enemy","isMe","timer","ended","reload","useState","timerDiv","setTimerDiv","useEffect","http","endpoint","param","throwError","config","a","axios","post","hostOrigin","withCredentials","res","data","status","checkWin","lis","start","orient","findList","idx","findPos","find","v","push","length","Board","props","mouseMove","e","winner","turnOn","rect","linesContainer","current","getBoundingClientRect","ceilSize","width","offsetX","Math","ceil","clientX","left","offsetY","clientY","top","history","fakeWin","assistant","temp","slice","num","pos","around","forEach","abs","checkPlayerFakeWin","myNumber","setState","activePos","lines","Array","fill","map","_","i","key","React","createRef","state","tri","quart","this","chessSize","onMouseMove","play","ref","genChessStyle","winList","height","floor","Component","language","nickName","zh","en","createGame","joinGame","watchGame","cancel","StatusBar","addText","t","c","splice","id","class_","animateEndLength","set","onAnimationEnd","Game","statusBar","func","setStatus","available","lang","turnAt","endState","err","getAvailable","nick","gameLoop","gameWait","gamePlay","console","log","Promise","resolve","handle","setInterval","window","removeEventListener","playEventHandle","clearInterval","detail","checkDraw","JSON","stringify","end","addEventListener","playEvent","CustomEvent","dispatchEvent","timeout","parse","content","placeholder","value","onChange","target","cancelWait","then","setCheese","my","checkPlayerWin","win","boardLines","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.90a13195.chunk.js","sourcesContent":["import React from \"react\";\nimport './index.scss'\n\nconst SingleButton = ({text, icon, size, onClick})=>{\n    size = size || 1;\n\n    return (\n        <div onClick={onClick} className='scope--single-button' style={{padding: `${0.3*size}rem ${1.2*size}rem`}}>\n            <span style={{fontSize: size+'rem'}}>{text}</span>\n        </div>\n    )\n}\n\nexport default SingleButton","import React, {useEffect, useState} from \"react\";\nimport './index.scss'\nimport SingleButton from \"../../../component/single-button\";\n\nconst Menu = ({self, enemy, isMe, timer, ended, reload})=>{\n    const [timerDiv, setTimerDiv] = useState((<div className='timer'/>))\n\n    useEffect(()=>{\n        setTimerDiv((\n            <div className='timer'>\n                <span>\n                    倒计时\n                    <b className={timer<=5?'red':''}>{timer}</b>\n                </span>\n            </div>\n        ))\n    }, [timer])\n\n    return (\n        <div className='scope--menu'>\n            <div className='player player1'>\n                <b>{self}</b>\n                {isMe?timerDiv:null}\n            </div>\n            <div className='mid'>\n                {ended?\n                    <SingleButton text={'退出'} onClick={reload}/>:''\n                }\n            </div>\n            <div className='player player2'>\n                <b>{enemy}</b>\n                {!isMe?timerDiv:null}\n            </div>\n        </div>\n    )\n}\n\nexport default Menu","import axios from \"axios\";\nimport {hostOrigin} from \"./index\";\n\nexport const timeout = 17;\n\nexport const boardLines = 15;\nexport const winNum = 5;\n\nexport async function http(endpoint, param, throwError, config){\n    try{\n        const res = await axios.post(hostOrigin + '/api/gobang/'+endpoint, param||{}, {\n                withCredentials: true,\n                ...(config||{})\n            });\n        const data = res.data;\n        if (data.status){\n            return [true, data.data]\n        }else{\n            throwError(data.data)\n            return [false]\n        }\n    }catch (err){\n        throwError(err)\n        return [false]\n    }\n}\n\nexport function checkPlayerWin(num, lis){\n    // 取出自己的棋子\n    const my = [];\n    lis.forEach((v, idx)=>{\n        if (idx%2 === num){\n            my.push(v)\n        }\n    })\n    return checkWin(my)\n}\n\nexport function checkPlayerFakeWin(num, lis, pos){\n    // 取出周围棋子\n    const around = [];\n    lis.forEach((v, idx)=>{\n        if (idx%2 === num && Math.abs(v[0]-pos[0])<winNum && Math.abs(v[1]-pos[1])<winNum){\n            around.push(v)\n        }\n    })\n    return checkWin(around)\n}\n\nexport function checkWin(lis) {\n    for (const start of lis) {\n        // 以start为开始\n        for (const orient of [[1, 0], [0, 1], [-1, 1], [1, 1], [1, -1], [-1, -1], [-1, 0], [0, -1]]) {\n            // 8种\n            const findList = [start];\n            for (let idx=1;idx<winNum;idx++){\n                const findPos = lis.find(v=>{\n                    return v[0]===start[0]+orient[0]*idx && v[1]===start[1]+orient[1]*idx\n                })\n                if (findPos){\n                    findList.push(findPos)\n                }\n            }\n            if (findList.length === winNum){\n                return findList\n            }\n        }\n    }\n    return []\n}","import React from \"react\";\nimport './index.scss'\nimport {boardLines, checkPlayerFakeWin, checkPlayerWin, winNum} from \"../../../utils\";\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props);\n        const lines = (new Array(boardLines).fill(0)).map((_, i) => <span key={i}/>);\n        this.linesContainer = React.createRef();\n        this.lines = (\n            <div className='lines'>\n                <div className='row'>\n                    {lines.slice()}\n                </div>\n                <div className='column'>\n                    {lines.slice()}\n                </div>\n            </div>\n        )\n        this.state = {\n            ceilSize: 0,\n            activePos: [],\n            tri: [],\n            quart: [],\n            fakeWin: []\n        }\n    }\n\n    mouseMove = (e) => {\n        // 玩家获胜 | 没轮到你 | 游戏结束\n        if (this.props.winner !== -1 || !this.props.turnOn || this.props.ended) {\n            this.setState({\n                activePos: []\n            })\n            return\n        }\n        const container = this.linesContainer.current;\n        const rect = container.getBoundingClientRect(),\n            ceilSize = rect.width / (boardLines - 1);\n        const offsetX = Math.ceil((e.clientX - rect.left - ceilSize / 2) / ceilSize),\n            offsetY = Math.ceil((e.clientY - rect.top - ceilSize / 2) / ceilSize);\n        for (const v of this.props.history) {\n            // 已放置的棋子\n            if (v[0] === offsetX && v[1] === offsetY) return\n        }\n        let fakeWin = []\n        if (this.props.assistant) {\n            const temp = this.props.history.slice()\n            temp.push([offsetX, offsetY])\n            fakeWin = checkPlayerFakeWin(this.props.myNumber, temp, [offsetX, offsetY])\n        }\n        this.setState({\n            activePos: [offsetX, offsetY],\n            ceilSize,\n            fakeWin\n        })\n    }\n\n    render() {\n        const {ceilSize, activePos} = this.state;\n        const chessSize = ceilSize * 4 / 5;\n        return (\n            <div className={'scope--board'}\n                 onMouseMove={(e) => {\n                     this.mouseMove(e)\n                 }}\n                 onClick={() => this.props.play(activePos)}>\n                <div ref={this.linesContainer} className='board'>\n                    {this.lines}\n                </div>\n                <div className='chess-container'>\n                    {activePos.length?\n                        <span className={'active chess ' +\n                        (this.state.fakeWin.find(v => v[0] === activePos[0] && v[1] === activePos[1]) ? 'fake-win' : '')}\n                              style={this.genChessStyle({pos: activePos, chessSize, ceilSize})}/>:''\n                    }{\n                        this.props.history.map((pos, i) => {\n                            return <span key={i}\n                                         className={'chess ' +\n                                         (i % 2 ? 'white ' : 'black ')+\n                                         (this.state.fakeWin.find(v=>v[0]===pos[0]&&v[1]===pos[1])?'fake-win ':' ')+\n                                         (i % 2===this.props.winner?\n                                             (this.props.winList.find(v=>v[0]===pos[0]&&v[1]===pos[1])?'win':''):'')}\n                                         style={this.genChessStyle({pos, chessSize, ceilSize})}/>\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n\n    genChessStyle ({pos, chessSize, ceilSize}){\n        return {\n            width: chessSize + 'px',\n            height: chessSize + 'px',\n            left: Math.floor(ceilSize * pos[0] + chessSize / 5 - ceilSize / 2 - 2) + 'px',\n            top: Math.floor(ceilSize * pos[1] + chessSize / 5 - ceilSize / 2 - 2) + 'px'\n        }\n    }\n}\n\nexport default Board","export const language = {\n    nickName: {\n        zh: '昵称',\n        en: 'nick name'\n    },\n    createGame: {\n        zh: '创建',\n        en: 'create new'\n    },\n    joinGame: {\n        zh: '加入',\n        en: 'join'\n    },\n    watchGame: {\n        zh: '观战',\n        en: 'watch'\n    },\n    cancel: {\n        zh: '取消',\n        en: 'cancel'\n    },\n}","import React from \"react\";\nimport './index.scss'\n\n\nclass StatusBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.id = 0;\n        this.animateEndLength = 0;\n        this.state = {\n            lis: []\n        }\n        props.set(this.addText)\n    }\n\n    addText = (t, c) => {\n        const temp = this.state.lis.slice(0, 4)\n        temp.splice(0, 0, {\n            id: this.id++,\n            text: t,\n            class_: c || 'err'\n        })\n        this.id = this.id % 5;\n        this.setState({\n            lis: temp\n        })\n        this.animateEndLength = 0\n    }\n\n    render() {\n        return (\n            <section className={'scope--status-bar'}>\n                {\n                    this.state.lis.map((v) => {\n                        return (\n                            <span className={v.class_} key={v.id}\n                                  onAnimationEnd={() => {\n                                      this.animateEndLength++;\n                                      // 一次性清空\n                                      if (this.state.lis.length === this.animateEndLength) {\n                                          this.setState({\n                                              lis: []\n                                          })\n                                      }\n                                  }}\n                            >{v.text}</span>\n                        )\n                    })\n                }\n            </section>\n        )\n    }\n}\n\nexport default StatusBar","import React from \"react\";\nimport './index.scss'\nimport Menu from \"./menu\";\nimport Board from \"./board\";\nimport SingleButton from \"../../component/single-button\";\nimport {boardLines, checkPlayerWin, http, timeout} from \"../../utils\";\nimport {language} from \"../../lang\";\nimport StatusBar from \"../../component/status-bar\";\n\nclass Game extends React.Component{\n    constructor(props) {\n        super(props);\n        this.activePos = [];\n        this.statusBar = <StatusBar set={(func)=>{this.setState({setStatus: func})}}/>\n        this.state = {\n            available: '',\n            setStatus: null,\n            lang: 'zh',\n            assistant: true,\n\n            self: '',\n            enemy: 'unknown',\n            myNumber: 0,\n            turnAt: 0,\n            timer: timeout,\n\n            history: [],\n            endState: false,\n            winner: -1,\n            winList: []\n        }\n    }\n\n    componentDidMount() {\n        (async ()=>{\n            await this.reload()\n        })()\n    }\n\n    throwError(err, c){\n        this.state.setStatus(err, c)\n    }\n\n    async reload (){\n        this.setState({\n            available: '',\n            enemy: 'unknown',\n            myNumber: 0,\n            turnAt: 0,\n            timer: 0,\n\n            history: [],\n            endState: false,\n            winner: -1,\n            winList: []\n        })\n        await this.getAvailable()\n    }\n\n    async getAvailable (){\n        const data = await http('check-available', {}, (err)=>this.throwError(err));\n        if (data[0]){\n            if (typeof data[1] === typeof []){\n                this.setState({\n                    enemy: data[1][1]\n                })\n                this.setState({\n                    available: data[1][0]\n                })\n            }else {\n                this.setState({\n                    available: data[1]\n                })\n            }\n        }else{\n            // TODO resume game\n            this.setState({\n                available: 'resume'\n            })\n        }\n    }\n\n    async createGame (){\n        if (!this.state.self) {\n            this.throwError('昵称不能为空!')\n            return\n        }\n        const data = await http('create', {nick: this.state.self}, (err)=>this.throwError(err));\n        if (data[0]){\n            this.setState({\n                available: 'waiting'\n            })\n            const data = await http('wait', {}, (err)=>this.throwError(err))\n            if (data[0]) {\n                this.setState({\n                    enemy: data[1],\n                    myNumber: 0,\n                    available: 'running'\n                })\n                await this.gameLoop()\n            }else{\n                await this.reload()\n            }\n        }else{\n            await this.reload()\n        }\n    }\n\n    async cancelWait (){\n        const data = await http('end', {}, (err)=>this.throwError(err));\n        if (data[0]) {\n            await this.reload();\n        }\n    }\n\n    async joinGame (){\n        if (!this.state.self) {\n            this.throwError('昵称不能为空!')\n            return\n        }\n        const data = await http('join', {nick: this.state.self}, (err)=>this.throwError(err))\n        if (data[0]) {\n            this.setState({\n                enemy: data[1],\n                myNumber: 1,\n                available: 'running'\n            })\n            await this.gameLoop()\n        }else{\n            await this.reload()\n        }\n    }\n    async gameLoop (){\n        if (this.state.turnAt !== this.state.myNumber){\n            // 先等待\n            if (!await this.gameWait()) return\n            this.setState({\n                turnAt: this.state.turnAt?0:1\n            })\n        }\n        while (await this.gamePlay()){\n            this.setState({\n                turnAt: this.state.turnAt?0:1\n            })\n            const res = await this.gameWait()\n            this.setState({\n                turnAt: this.state.turnAt?0:1\n            })\n            if (!res) return\n        }\n    }\n    async gamePlay (){\n        console.log('wait play')\n        return new Promise((resolve => {\n            this.setState({\n                timer: timeout\n            })\n            const handle = setInterval(()=>{\n                this.setState({\n                    timer: this.state.timer-1\n                })\n                if (this.state.timer === 0){\n                    window.removeEventListener('play-event', playEventHandle)\n                    clearInterval(handle);\n                    this.throwError('超时，你输了')\n                    this.setState({\n                        endState: true\n                    })\n                }\n            }, 1000);\n            const playEventHandle = async (e)=> {\n                window.removeEventListener('play-event', playEventHandle);\n                clearInterval(handle);\n                if (this.checkWin(this.state.myNumber, e.detail) || this.checkDraw(e.detail)){\n                    await http('play', {pos: JSON.stringify(this.activePos), end: true}, (err) => this.throwError(err))\n                    // 发送后直接结束\n                    resolve(false)\n                }else {\n                    resolve((await http('play', {pos: JSON.stringify(this.activePos)}, (err) => this.throwError(err)))[0])\n                }\n            }\n            window.addEventListener('play-event', playEventHandle);\n        }))\n    }\n    setCheese (pos){\n        if (this.state.winner !== -1 || pos.length===0 || this.state.endState) return false\n        if (this.state.turnAt === this.state.myNumber) {\n            this.activePos = pos\n            const temp = this.state.history.slice()\n            temp.push(pos)\n            this.setState({\n                history: temp\n            })\n            // 防止setState异步更新\n            const playEvent = new CustomEvent('play-event', {detail: temp});\n            window.dispatchEvent(playEvent);\n        }else{\n            this.throwError('请先等待对方下棋')\n        }\n    }\n    async gameWait (){\n        if (this.state.winner !== -1) return false\n        console.log('wait enemy play')\n        this.setState({\n            timer: timeout\n        })\n        const handle = setInterval(()=>{\n            this.setState({\n                timer: this.state.timer-1\n            })\n            if (this.state.timer === 0){\n                clearInterval(handle)\n            }\n        }, 1000);\n        const data = await http('wait', {}, (err)=>this.throwError(err), {timeout: (timeout)*1000+1000});\n        clearInterval(handle);\n        if (data[0]){\n           if (data[1] === 'end'){\n               this.throwError('对方弃战了', 'warn')\n               this.setState({\n                   endState: true\n               })\n               return false\n           }else{\n               const pos = JSON.parse(data[1]);\n               for (const v of this.state.history){\n                   if (v[0] === pos[0] && v[1] === pos[1]) {\n                       this.throwError('对方非法操作!', 'warn')\n                       this.setState({\n                           endState: true\n                       })\n                       return false\n                   }\n               }\n               const temp = this.state.history.slice()\n               temp.push(pos)\n               this.setState({\n                   history: temp\n               })\n               if (this.checkWin(this.state.myNumber?0:1, temp) || this.checkDraw(temp)){\n                   // 游戏结束\n                   return false\n               }\n           }\n        }\n        return data[0]\n    }\n\n    watchGame (){\n\n    }\n\n    render() {\n        let content = '';\n        switch (this.state.available) {\n            case \"\":\n                content = (\n                    <div className={this.state.available}>\n                        初始化...\n                    </div>)\n                break\n            case \"not\":\n                content = (\n                    <div className={this.state.available}>\n                        出错了,尝试刷新页面?\n                    </div>)\n                break\n            case \"exist\":\n                content = (\n                    <div className={this.state.available}>\n                        有人在玩了,你可以选择观战\n                        <SingleButton text={language.watchGame[this.state.lang]} onClick={() => this.watchGame()}/>\n                    </div>)\n                break\n            case \"create\":\n                content = (\n                    <div className={this.state.available}>\n                        <label>\n                            <input placeholder={language.nickName[this.state.lang]} value={this.state.self}\n                                   onChange={(v) => {\n                                       this.setState({\n                                           self: v.target.value\n                                       })\n                                   }}/>\n                        </label>\n                        <SingleButton text={language.createGame[this.state.lang]} onClick={() => this.createGame()}/>\n                    </div>)\n                break\n            case \"waiting\":\n                content = (\n                    <div className={this.state.available}>\n                        <span>等待玩家加入...</span>\n                        <SingleButton text={language.cancel[this.state.lang]} onClick={() => this.cancelWait()}/>\n                    </div>)\n                break\n            case \"join\":\n                content = (\n                    <div className={this.state.available}>\n                        <p>加入<b>{this.state.enemy}</b>的对局</p>\n                        <label>\n                            <input placeholder={language.nickName[this.state.lang]} value={this.state.self}\n                                   onChange={(v) => {\n                                       this.setState({\n                                           self: v.target.value\n                                       })\n                                   }}/>\n                        </label>\n                        <SingleButton text={language.joinGame[this.state.lang]} onClick={() => this.joinGame()}/>\n                    </div>)\n                break\n            case \"running\":\n                content = (\n                    <div className={this.state.available}>\n                        <Menu self={this.state.self} enemy={this.state.enemy} isMe={this.state.myNumber === this.state.turnAt}\n                              timer={this.state.timer}\n                              ended={this.state.endState} reload={()=>{this.reload().then()}}/>\n                        <Board history={this.state.history} ended={this.state.endState} myNumber={this.state.myNumber}\n                               play={(e)=>{this.setCheese(e)}} assistant={this.state.assistant} turnOn={this.state.myNumber===this.state.turnAt}\n                               winner={this.state.winner} winList={this.state.winList}/>\n                    </div>)\n                break\n            case \"resume\":\n                content = (\n                    <div className={this.state.available}>\n                        正在恢复对局...\n                    </div>)\n                break\n        }\n        return (\n            <div className={'scope--game'}>\n                {this.statusBar}\n                {content}\n            </div>)\n    }\n\n    checkWin (num, lis){\n        let winList = checkPlayerWin(num, lis),\n            winner = winList.length?num:-1;\n        this.setState({\n            winner,\n            winList,\n            endState: winner !== -1\n        })\n        const win = winner===this.state.myNumber;\n        if (winner > -1){\n            this.throwError('你'+(win?'赢':'输')+'了', win?'succ':'err')\n        }\n        return winList.length\n    }\n\n    checkDraw (lis){\n        if (lis.length === boardLines*boardLines){\n            this.throwError('平局', 'succ')\n            this.setState({\n                endState: true\n            })\n            return true\n        }\n        return false\n    }\n}\n\nexport default Game","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport Game from \"./views/game\";\n\nexport const hostOrigin = process.env.NODE_ENV==='development'?'http://localhost:16074':'https://fun-backend.herokuapp.com'\n\nReactDOM.render(\n    <Game/>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}